<div class="main-container">
  <div class="cards-container">
    <div class="row row-no-margin">
      <!-- search box -->
      <div class="col-xs-12">
        <%= form_tag surfcamps_path, method: :get, class: "search-box" do %>
        <!-- first line of search box -->
        <div class="search-box-where">
          <i class="fa fa-search" aria-hidden="true"></i>
          <%= text_field_tag 'address', nil, value: params[:address], placeholder: 'Ex: Lisbonne, Portugal', class: "search-box-input", id: "surfcamp_address" %>
        </div>
        <div class="search-box-waves">
          <div class="search-box-waves-title text-center">
            <a class="" data-toggle="collapse" href="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
            Waves <i class="fa fa-chevron-down" aria-hidden="true"></i></a>
             <div class="collapse" id="collapseExample">
              <div class="search-box-waves-filters">
                <%= label_tag "waves", "waves quality:" %>
                <%= check_box_tag 'wave-good', value = nil, id: "wave_good" %>
                <%= label_tag "wave-good", "good waves" %>
                <%= check_box_tag 'wave-ok', value = 40, id: "wave_ok" %>
                <%= label_tag "wave-ok", "ok waves" %>
              </div>
            </div>
          </div>

        </div>
        <!-- second line of search box -->
        <div class="search-box-budget">
          <i class="fa fa-money" aria-hidden="true"></i>
          <%= text_field_tag 'maxprice', nil, value: params[:maxprice], placeholder: 'Ex: 120€', class: "search-box-input", id: "maxprice" %>
        </div>
      </div>
      <div class="col-xs-12 search-action">
          <div class="result">
            <p><%= pluralize(@surfcamps.size, 'result')%> matching your criterias </p>
            <%= link_to "reset filters", surfcamps_path %>
          </div>
          <div class="button">
            <%= button_tag(content = "Apply Filters", class: "btn btn-primary search-box-font-size") %>
          </div>
          <% end %>
      </div>
      <!-- surfcamps cards -->
      <% @surfcamps.each do |surfcamp| %>
        <div class="col-xs-12 col-lg-10 col-lg-offset-1">
          <div class="surfcamp-card">
            <div class="surfcamp-card-pic">
              <!-- <img src="https://unsplash.it/250/150" alt=""> -->
              <% if surfcamp.photo? %>
                <%= cl_image_tag surfcamp.photo.path, width: 510, height: 350, crop: :fill, fetch_format: :auto %>
              <% end %>
            </div>
            <div class="surfcamp-card-text">
              <!-- get the min price out of all rooms -->
              <div class="surfcamp-cart-text-price">
                  <p>From XXX € | Save XX % |<%= surfcamp.name %></p>


              </div>
              <div class="surfcamp-card-text-stars">
                <% surfcamp.rating.times do %>
                <i class="fa fa-star" aria-hidden="true"></i>
                <% end %>
              </div>
            </div>
            <%= link_to "", surfcamp_path(surfcamp), class: "surfcamp-card-link" %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
  <!-- map -->
  <div id="map">
  </div>
</div>


<% content_for(:after_js) do %>
  <%= javascript_tag do %>
    $(document).ready(function() {
      var dima = [
    {
        "featureType": "administrative",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#444444"
            }
        ]
    },
    {
        "featureType": "landscape",
        "elementType": "all",
        "stylers": [
            {
                "color": "#f2f2f2"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "all",
        "stylers": [
            {
                "saturation": -100
            },
            {
                "lightness": 45
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "labels.icon",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "transit",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "all",
        "stylers": [
            {
                "color": "#5bbee1"
            },
            {
                "visibility": "on"
            }
        ]
    }
];

      var handler = Gmaps.build('Google');
      handler.buildMap({
      provider: {
        styles: dima
      },
      internal: { id: 'map' } }, function() {
        markers = handler.addMarkers(<%= raw @hash.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
        if (markers.length == 0) {
          handler.getMap().setZoom(2);
        } else if (markers.length == 1) {
          handler.getMap().setZoom(14);
        }
      });
    });

 <!-- ici c'est la merde -->
 function onPlaceChanged() {
  var place = this.getPlace();
  var components = getAddressComponents(place);

  var flatAddress = document.getElementById('flat_address');
  flatAddress.blur();
  flatAddress.value = components.address;

  document.getElementById('flat_zip_code').value = components.zip_code;
  document.getElementById('flat_city').value = components.city;

  if (components.country_code) {
    var selector = '#flat_country option[value="' + components.country_code + '"]';
    document.querySelector(selector).selected = true;
  }
}

function getAddressComponents(place) {
  // If you want lat/lng, you can look at:
  // - place.geometry.location.lat()
  // - place.geometry.location.lng()

  if (window.console && typeof console.log === "function") {
    console.log(place);
  }

  var street_number = null;
  var route = null;
  var zip_code = null;
  var city = null;
  var country_code = null;
  for (var i in place.address_components) {
    var component = place.address_components[i];
    for (var j in component.types) {
      var type = component.types[j];
      if (type === 'street_number') {
        street_number = component.long_name;
      } else if (type === 'route') {
        route = component.long_name;
      } else if (type === 'postal_code') {
        zip_code = component.long_name;
      } else if (type === 'locality') {
        city = component.long_name;
      } else if (type === 'postal_town' && city === null) {
        city = component.long_name;
      } else if (type === 'country') {
        country_code = component.short_name;
      }
    }
  }

  return {
    address: street_number === null ? route : (street_number + ' ' + route),
    zip_code: zip_code,
    city: city,
    country_code: country_code
  };
}

document.addEventListener("DOMContentLoaded", function() {
  var flatAddress = document.getElementById('surfcamp_address');

  if (flatAddress) {
    var autocomplete = new google.maps.places.Autocomplete(flatAddress, { types: ['geocode'] });
    google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);
    google.maps.event.addDomListener(flatAddress, 'keydown', function(e) {

    });
  }
});


  <% end %>
<% end %>


